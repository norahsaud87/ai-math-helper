{"ast":null,"code":"/*\n * JavaScript Load Image\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, webkitURL, module */\n\n;\n(function ($) {\n  'use strict';\n\n  /**\n   * Loads an image for a given File object.\n   * Invokes the callback with an img or optional canvas element\n   * (if supported by the browser) as parameter:.\n   *\n   * @param {File|Blob|string} file File or Blob object or image URL\n   * @param {Function} [callback] Image load event callback\n   * @param {object} [options] Options object\n   * @returns {HTMLImageElement|HTMLCanvasElement|FileReader} image object\n   */\n  function loadImage(file, callback, options) {\n    var img = document.createElement('img');\n    var url;\n    /**\n     * Callback for the fetchBlob call.\n     *\n     * @param {Blob} blob Blob object\n     * @param {Error} err Error object\n     */\n    function fetchBlobCallback(blob, err) {\n      if (err) console.log(err); // eslint-disable-line no-console\n      if (blob && loadImage.isInstanceOf('Blob', blob)) {\n        // eslint-disable-next-line no-param-reassign\n        file = blob;\n        url = loadImage.createObjectURL(file);\n      } else {\n        url = file;\n        if (options && options.crossOrigin) {\n          img.crossOrigin = options.crossOrigin;\n        }\n      }\n      img.src = url;\n    }\n    img.onerror = function (event) {\n      return loadImage.onerror(img, event, file, url, callback, options);\n    };\n    img.onload = function (event) {\n      return loadImage.onload(img, event, file, url, callback, options);\n    };\n    if (typeof file === 'string') {\n      if (loadImage.hasMetaOption(options)) {\n        loadImage.fetchBlob(file, fetchBlobCallback, options);\n      } else {\n        fetchBlobCallback();\n      }\n      return img;\n    } else if (loadImage.isInstanceOf('Blob', file) ||\n    // Files are also Blob instances, but some browsers\n    // (Firefox 3.6) support the File API but not Blobs:\n    loadImage.isInstanceOf('File', file)) {\n      url = loadImage.createObjectURL(file);\n      if (url) {\n        img.src = url;\n        return img;\n      }\n      return loadImage.readFile(file, function (e) {\n        var target = e.target;\n        if (target && target.result) {\n          img.src = target.result;\n        } else if (callback) {\n          callback(e);\n        }\n      });\n    }\n  }\n  // The check for URL.revokeObjectURL fixes an issue with Opera 12,\n  // which provides URL.createObjectURL but doesn't properly implement it:\n  var urlAPI = $.createObjectURL && $ || $.URL && URL.revokeObjectURL && URL || $.webkitURL && webkitURL;\n\n  /**\n   * Helper function to revoke an object URL\n   *\n   * @param {string} url Blob Object URL\n   * @param {object} [options] Options object\n   */\n  function revokeHelper(url, options) {\n    if (url && url.slice(0, 5) === 'blob:' && !(options && options.noRevoke)) {\n      loadImage.revokeObjectURL(url);\n    }\n  }\n\n  // Determines if meta data should be loaded automatically.\n  // Requires the load image meta extension to load meta data.\n  loadImage.hasMetaOption = function (options) {\n    return options && options.meta;\n  };\n\n  // If the callback given to this function returns a blob, it is used as image\n  // source instead of the original url and overrides the file argument used in\n  // the onload and onerror event callbacks:\n  loadImage.fetchBlob = function (url, callback) {\n    callback();\n  };\n  loadImage.isInstanceOf = function (type, obj) {\n    // Cross-frame instanceof check\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']';\n  };\n  loadImage.transform = function (img, options, callback, file, data) {\n    callback(img, data);\n  };\n  loadImage.onerror = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options);\n    if (callback) {\n      callback.call(img, event);\n    }\n  };\n  loadImage.onload = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options);\n    if (callback) {\n      loadImage.transform(img, options, callback, file, {\n        originalWidth: img.naturalWidth || img.width,\n        originalHeight: img.naturalHeight || img.height\n      });\n    }\n  };\n  loadImage.createObjectURL = function (file) {\n    return urlAPI ? urlAPI.createObjectURL(file) : false;\n  };\n  loadImage.revokeObjectURL = function (url) {\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false;\n  };\n\n  // Loads a given File object via FileReader interface,\n  // invokes the callback with the event object (load or error).\n  // The result can be read via event.target.result:\n  loadImage.readFile = function (file, callback, method) {\n    if ($.FileReader) {\n      var fileReader = new FileReader();\n      fileReader.onload = fileReader.onerror = callback;\n      // eslint-disable-next-line no-param-reassign\n      method = method || 'readAsDataURL';\n      if (fileReader[method]) {\n        fileReader[method](file);\n        return fileReader;\n      }\n    }\n    return false;\n  };\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return loadImage;\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = loadImage;\n  } else {\n    $.loadImage = loadImage;\n  }\n})(typeof window !== 'undefined' && window || this);","map":{"version":3,"names":["$","loadImage","file","callback","options","img","document","createElement","url","fetchBlobCallback","blob","err","console","log","isInstanceOf","createObjectURL","crossOrigin","src","onerror","event","onload","hasMetaOption","fetchBlob","readFile","e","target","result","urlAPI","URL","revokeObjectURL","webkitURL","revokeHelper","slice","noRevoke","meta","type","obj","Object","prototype","toString","call","transform","data","originalWidth","naturalWidth","width","originalHeight","naturalHeight","height","method","FileReader","fileReader","define","amd","module","exports","window"],"sources":["/Users/mac/Downloads/ai-math-helper-complete/node_modules/blueimp-load-image/js/load-image.js"],"sourcesContent":["/*\n * JavaScript Load Image\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, webkitURL, module */\n\n;(function ($) {\n  'use strict'\n\n  /**\n   * Loads an image for a given File object.\n   * Invokes the callback with an img or optional canvas element\n   * (if supported by the browser) as parameter:.\n   *\n   * @param {File|Blob|string} file File or Blob object or image URL\n   * @param {Function} [callback] Image load event callback\n   * @param {object} [options] Options object\n   * @returns {HTMLImageElement|HTMLCanvasElement|FileReader} image object\n   */\n  function loadImage(file, callback, options) {\n    var img = document.createElement('img')\n    var url\n    /**\n     * Callback for the fetchBlob call.\n     *\n     * @param {Blob} blob Blob object\n     * @param {Error} err Error object\n     */\n    function fetchBlobCallback(blob, err) {\n      if (err) console.log(err) // eslint-disable-line no-console\n      if (blob && loadImage.isInstanceOf('Blob', blob)) {\n        // eslint-disable-next-line no-param-reassign\n        file = blob\n        url = loadImage.createObjectURL(file)\n      } else {\n        url = file\n        if (options && options.crossOrigin) {\n          img.crossOrigin = options.crossOrigin\n        }\n      }\n      img.src = url\n    }\n    img.onerror = function (event) {\n      return loadImage.onerror(img, event, file, url, callback, options)\n    }\n    img.onload = function (event) {\n      return loadImage.onload(img, event, file, url, callback, options)\n    }\n    if (typeof file === 'string') {\n      if (loadImage.hasMetaOption(options)) {\n        loadImage.fetchBlob(file, fetchBlobCallback, options)\n      } else {\n        fetchBlobCallback()\n      }\n      return img\n    } else if (\n      loadImage.isInstanceOf('Blob', file) ||\n      // Files are also Blob instances, but some browsers\n      // (Firefox 3.6) support the File API but not Blobs:\n      loadImage.isInstanceOf('File', file)\n    ) {\n      url = loadImage.createObjectURL(file)\n      if (url) {\n        img.src = url\n        return img\n      }\n      return loadImage.readFile(file, function (e) {\n        var target = e.target\n        if (target && target.result) {\n          img.src = target.result\n        } else if (callback) {\n          callback(e)\n        }\n      })\n    }\n  }\n  // The check for URL.revokeObjectURL fixes an issue with Opera 12,\n  // which provides URL.createObjectURL but doesn't properly implement it:\n  var urlAPI =\n    ($.createObjectURL && $) ||\n    ($.URL && URL.revokeObjectURL && URL) ||\n    ($.webkitURL && webkitURL)\n\n  /**\n   * Helper function to revoke an object URL\n   *\n   * @param {string} url Blob Object URL\n   * @param {object} [options] Options object\n   */\n  function revokeHelper(url, options) {\n    if (url && url.slice(0, 5) === 'blob:' && !(options && options.noRevoke)) {\n      loadImage.revokeObjectURL(url)\n    }\n  }\n\n  // Determines if meta data should be loaded automatically.\n  // Requires the load image meta extension to load meta data.\n  loadImage.hasMetaOption = function (options) {\n    return options && options.meta\n  }\n\n  // If the callback given to this function returns a blob, it is used as image\n  // source instead of the original url and overrides the file argument used in\n  // the onload and onerror event callbacks:\n  loadImage.fetchBlob = function (url, callback) {\n    callback()\n  }\n\n  loadImage.isInstanceOf = function (type, obj) {\n    // Cross-frame instanceof check\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']'\n  }\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    callback(img, data)\n  }\n\n  loadImage.onerror = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options)\n    if (callback) {\n      callback.call(img, event)\n    }\n  }\n\n  loadImage.onload = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options)\n    if (callback) {\n      loadImage.transform(img, options, callback, file, {\n        originalWidth: img.naturalWidth || img.width,\n        originalHeight: img.naturalHeight || img.height\n      })\n    }\n  }\n\n  loadImage.createObjectURL = function (file) {\n    return urlAPI ? urlAPI.createObjectURL(file) : false\n  }\n\n  loadImage.revokeObjectURL = function (url) {\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false\n  }\n\n  // Loads a given File object via FileReader interface,\n  // invokes the callback with the event object (load or error).\n  // The result can be read via event.target.result:\n  loadImage.readFile = function (file, callback, method) {\n    if ($.FileReader) {\n      var fileReader = new FileReader()\n      fileReader.onload = fileReader.onerror = callback\n      // eslint-disable-next-line no-param-reassign\n      method = method || 'readAsDataURL'\n      if (fileReader[method]) {\n        fileReader[method](file)\n        return fileReader\n      }\n    }\n    return false\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return loadImage\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = loadImage\n  } else {\n    $.loadImage = loadImage\n  }\n})((typeof window !== 'undefined' && window) || this)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}