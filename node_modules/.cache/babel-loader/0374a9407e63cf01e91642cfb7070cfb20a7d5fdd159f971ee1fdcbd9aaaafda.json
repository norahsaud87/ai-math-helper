{"ast":null,"code":"const resolveURL = require('resolve-url');\nconst blueimpLoadImage = require('blueimp-load-image');\n\n/**\n * readFromBlobOrFile\n *\n * @name readFromBlobOrFile\n * @function\n * @access private\n */\nconst readFromBlobOrFile = blob => new Promise((resolve, reject) => {\n  const fileReader = new FileReader();\n  fileReader.onload = () => {\n    resolve(fileReader.result);\n  };\n  fileReader.onerror = ({\n    target: {\n      error: {\n        code\n      }\n    }\n  }) => {\n    reject(Error(`File could not be read! Code=${code}`));\n  };\n  fileReader.readAsArrayBuffer(blob);\n});\nconst fixOrientationFromUrlOrBlobOrFile = blob => new Promise(resolve => {\n  blueimpLoadImage(blob, img => img.toBlob(resolve), {\n    orientation: true,\n    canvas: true\n  });\n});\n\n/**\n * loadImage\n *\n * @name loadImage\n * @function load image from different source\n * @access private\n */\nconst loadImage = async image => {\n  let data = image;\n  if (typeof image === 'undefined') {\n    return 'undefined';\n  }\n  if (typeof image === 'string') {\n    if (image.endsWith('.pbm')) {\n      const resp = await fetch(resolveURL(image));\n      data = await resp.arrayBuffer();\n    } else {\n      let img = image;\n      // If not Base64 Image\n      if (!/data:image\\/([a-zA-Z]*);base64,([^\"]*)/.test(image)) {\n        img = resolveURL(image);\n      }\n      data = await readFromBlobOrFile(await fixOrientationFromUrlOrBlobOrFile(img));\n    }\n  } else if (image instanceof HTMLElement) {\n    if (image.tagName === 'IMG') {\n      data = await loadImage(image.src);\n    }\n    if (image.tagName === 'VIDEO') {\n      data = await loadImage(image.poster);\n    }\n    if (image.tagName === 'CANVAS') {\n      await new Promise(resolve => {\n        image.toBlob(async blob => {\n          data = await readFromBlobOrFile(blob);\n          resolve();\n        });\n      });\n    }\n  } else if (image instanceof File || image instanceof Blob) {\n    let img = image;\n    if (!image.name.endsWith('.pbm')) {\n      img = await fixOrientationFromUrlOrBlobOrFile(img);\n    }\n    data = await readFromBlobOrFile(img);\n  }\n  return new Uint8Array(data);\n};\nmodule.exports = loadImage;","map":{"version":3,"names":["resolveURL","require","blueimpLoadImage","readFromBlobOrFile","blob","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","target","error","code","Error","readAsArrayBuffer","fixOrientationFromUrlOrBlobOrFile","img","toBlob","orientation","canvas","loadImage","image","data","endsWith","resp","fetch","arrayBuffer","test","HTMLElement","tagName","src","poster","File","Blob","name","Uint8Array","module","exports"],"sources":["/Users/mac/Downloads/ai-math-helper-complete/node_modules/tesseract.js/src/worker/browser/loadImage.js"],"sourcesContent":["const resolveURL = require('resolve-url');\nconst blueimpLoadImage = require('blueimp-load-image');\n\n/**\n * readFromBlobOrFile\n *\n * @name readFromBlobOrFile\n * @function\n * @access private\n */\nconst readFromBlobOrFile = (blob) => (\n  new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = ({ target: { error: { code } } }) => {\n      reject(Error(`File could not be read! Code=${code}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  })\n);\n\nconst fixOrientationFromUrlOrBlobOrFile = (blob) => (\n  new Promise((resolve) => {\n    blueimpLoadImage(\n      blob,\n      (img) => img.toBlob(resolve),\n      {\n        orientation: true,\n        canvas: true,\n      },\n    );\n  })\n);\n\n/**\n * loadImage\n *\n * @name loadImage\n * @function load image from different source\n * @access private\n */\nconst loadImage = async (image) => {\n  let data = image;\n  if (typeof image === 'undefined') {\n    return 'undefined';\n  }\n\n  if (typeof image === 'string') {\n    if (image.endsWith('.pbm')) {\n      const resp = await fetch(resolveURL(image));\n      data = await resp.arrayBuffer();\n    } else {\n      let img = image;\n      // If not Base64 Image\n      if (!/data:image\\/([a-zA-Z]*);base64,([^\"]*)/.test(image)) {\n        img = resolveURL(image);\n      }\n      data = await readFromBlobOrFile(\n        await fixOrientationFromUrlOrBlobOrFile(img),\n      );\n    }\n  } else if (image instanceof HTMLElement) {\n    if (image.tagName === 'IMG') {\n      data = await loadImage(image.src);\n    }\n    if (image.tagName === 'VIDEO') {\n      data = await loadImage(image.poster);\n    }\n    if (image.tagName === 'CANVAS') {\n      await new Promise((resolve) => {\n        image.toBlob(async (blob) => {\n          data = await readFromBlobOrFile(blob);\n          resolve();\n        });\n      });\n    }\n  } else if (image instanceof File || image instanceof Blob) {\n    let img = image;\n    if (!image.name.endsWith('.pbm')) {\n      img = await fixOrientationFromUrlOrBlobOrFile(img);\n    }\n    data = await readFromBlobOrFile(img);\n  }\n\n  return new Uint8Array(data);\n};\n\nmodule.exports = loadImage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}